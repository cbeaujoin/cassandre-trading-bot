name: Release creation

on:
  push:
    tags:
      - '*'

jobs:
  build:
    # ==================================================================================================================
    # Configuration.
    runs-on: ubuntu-latest

    steps:
      # ================================================================================================================
      - name: Setup GPG
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --import --batch private.asc
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v1

      # ================================================================================================================
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # ================================================================================================================
      - name: Build, run tests, package
        id: package
        env: # Environment variables.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Ossrh credentials.
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          # GPG.
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn deploy -B -Dgpg.passphrase=${GPG_PASSPHRASE}
          echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      # ================================================================================================================
      - name: Create the release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.version }}
          release_name: ${{ steps.package.outputs.version }}
          draft: false
          prerelease: false

      # ================================================================================================================
      # Upload cassandre-trading-bot-spring-boot-autoconfigure assets to the release (jar, sources, javadoc).
      - name: Upload cassandre-trading-bot-spring-boot-autoconfigure jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trading-bot-spring-boot-autoconfigure/target/cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}.jar
          asset_name: cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Upload cassandre-trading-bot-spring-boot-autoconfigure sources
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trading-bot-spring-boot-autoconfigure/target/cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}-sources.jar
          asset_name: cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}-sources.jar
          asset_content_type: application/java-archive

      - name: Upload cassandre-trading-bot-spring-boot-autoconfigure javadoc
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trading-bot-spring-boot-autoconfigure/target/cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}-javadoc.jar
          asset_name: cassandre-trading-bot-spring-boot-autoconfigure-${{ steps.package.outputs.version }}-javadoc.jar
          asset_content_type: application/java-archive

      # ================================================================================================================
      # Upload cassandre-trading-bot-spring-boot-starter assets to the release (jar).
      - name: Upload cassandre-trading-bot-spring-boot-starter jar
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: trading-bot-spring-boot-starter/target/cassandre-trading-bot-spring-boot-starter-${{ steps.package.outputs.version }}.jar
          asset_name: cassandre-trading-bot-spring-boot-starter-${{ steps.package.outputs.version }}.jar
          asset_content_type: application/java-archive

      # ================================================================================================================
      - name : Publish the release announce on Twitter
        uses: ethomson/send-tweet-action@v1
        env:
          TWITTER_CONSUMER_API_KEY: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          TWITTER_CONSUMER_API_SECRET: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        with:
          status: "Cassandre trading bot ${{ steps.package.outputs.version }} released - More information here : ${{ steps.create_release.outputs.html_url }}"
          consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
